#undef MAP
#define MAP NUMBER
map_data="{@campaigns/Flight_Freedom_1_3/maps/drake{NUMBER}.map}"
#enddef

#DEPRECATED
#define RANDOM_TRAIT_UNIT STATS
	[unit]
	{STATS}
	random_traits=yes
	[/unit]
#enddef

#DEPRECATED
#define RANDOM_TRAIT_UNIT_ELF STATS
{RANDOM_TRAIT_UNIT ({STATS})}
#enddef

#define MALAKAR_PORTRAIT
	image=$malakar_image
#enddef

#define KOGW_PORTRAIT
	image=$kogw_image
#enddef

#define DRAKE_ICON
	image="misc/icon-drake.png"
#enddef

#define LAVA_DAMAGE TOP BOTTOM LEFT RIGHT
	[event]
		name=side turn
		first_time_only=no
		[if]
			[variable]
				name=side_number
				numerical_equals=2
			[/variable]
			[then]
				[store_locations]
					x={LEFT}-{RIGHT}
					y={TOP}-{BOTTOM}
					terrain="Yl"
					[filter]
						side=1
					[/filter]
					variable=locs
				[/store_locations]
				{FOREACH locs i}
				{VARIABLE_OP tempx to_variable locs[$i].x}
				{VARIABLE_OP tempy to_variable locs[$i].y}
				[store_unit]
					[filter]
						x,y=$tempx,$tempy
					[/filter]
					variable=victim
				[/store_unit]
				[if]
					[variable]
						name=victim.hitpoints
						less_than=5
					[/variable]
					[then]
						{VARIABLE victim.hitpoints 1}
					[/then]
					[else]
						{VARIABLE_OP victim.hitpoints add -4}
					[/else]
				[/if]
				[unstore_unit]
					variable=victim
				[/unstore_unit]
				{NEXT i}
				{CLEAR_VARIABLE locs}
				{CLEAR_VARIABLE victim}
				{CLEAR_VARIABLE tempx}
				{CLEAR_VARIABLE tempy}
			[/then]
		[/if]
	[/event]
#enddef

#define DRAKE_GUARD_STONE X Y SIDE
		[unit]
			type=Drake Guard
			x={X}
			y={Y}
			side={SIDE}
			[status]
				stone=on
			[/status]
		[/unit]
#enddef

#define RDRAKE_GUARD_STONE X Y SIDE
		[unit]
			type=Drake Guard
			x={X}
			y={Y}
			side={SIDE}
			[status]
				stone=on
			[/status]
			facing=sw
		[/unit]
#enddef

#zookeeper's invention
#define IF VAR OP VAL CONTENTS
	 [if]
	 	 [variable]
	 	 	 name={VAR}
	 	 	 {OP}={VAL}
	 	 [/variable]
	 	 {CONTENTS}
	 [/if]
#enddef

#and
#define NO_SLIDING TYPE WEAPON RANGE
	[/attack]
	[event]
	name=attack
	first_time_only=no
	[filter]
		type={TYPE}
	[/filter]
	[special_filter]
		weapon={WEAPON}
	[/special_filter]
	[store_unit]
		[filter]
			x,y=$x1,$y1
		[/filter]
		kill=yes
		variable={RANGE}_attacker
	[/store_unit]
	{FOREACH {RANGE}_attacker.attack i}
	{VARIABLE_OP {RANGE}_attacker_attack format "${RANGE}_attacker.attack[$i].name"}
		{IF {RANGE}_attacker_attack equals ({WEAPON}) (
		[then]
			{VARIABLE {RANGE}_attacker.attack[$i].range "ranged"}
		[/then]
		)}
	{NEXT i}
	[unstore_unit]
		variable={RANGE}_attacker
	[/unstore_unit]
	[store_unit]
		[filter]
			x,y=$x2,$y2
		[/filter]
		kill=yes
		variable={RANGE}_defender
	[/store_unit]
	{FOREACH {RANGE}_defender.attack i}
	{VARIABLE_OP {RANGE}_defender_attack_range format "${RANGE}_defender.attack[$i].range"}
	{IF {RANGE}_defender_attack_range equals "{RANGE}" (
	[then]
		{VARIABLE {RANGE}_defender.attack[$i].range "ranged"}
		{VARIABLE_OP {RANGE}_defender.variables.{RANGE}_attack_name format "${RANGE}_defender.attack[$i].name"}
		{VARIABLE {RANGE}_defender.attack[$i].name "is_really_{RANGE}"}
	[/then]
	)}
	{IF {RANGE}_defender_attack_range equals "ranged" (
	[then]
		{VARIABLE {RANGE}_defender.attack[$i].range "is_really_ranged"}
	[/then]
	)}
	{NEXT i}
	[unstore_unit]
		variable={RANGE}_defender
	[/unstore_unit]
	{CLEAR_VARIABLE {RANGE}_attacker_attack}
	{CLEAR_VARIABLE {RANGE}_attacker}
	{CLEAR_VARIABLE {RANGE}_defender_attack_range}
	{CLEAR_VARIABLE {RANGE}_defender}
	[/event]

	[event]
	name=attack_end
	first_time_only=no
	[filter]
		type={TYPE}
	[/filter]
	[special_filter]
		weapon={WEAPON}
	[/special_filter]
	[store_unit]
		[filter]
		x,y=$x1,$y1
		[/filter]
		kill=yes
		variable={RANGE}_attacker
	[/store_unit]
	{FOREACH {RANGE}_attacker.attack i}
	{VARIABLE_OP {RANGE}_attacker_attack format "${RANGE}_attacker.attack[$i].name"}
	{IF {RANGE}_attacker_attack equals ({WEAPON}) (
	[then]
		{VARIABLE {RANGE}_attacker.attack[$i].range "{RANGE}"}
	[/then]
	)}
	{NEXT i}
	[unstore_unit]
		variable={RANGE}_attacker
	[/unstore_unit]
	[store_unit]
		[filter]
		x,y=$x2,$y2
		[/filter]
		kill=yes
		variable={RANGE}_defender
	[/store_unit]
	{FOREACH {RANGE}_defender.attack i}
	{VARIABLE_OP {RANGE}_defender_attack format "${RANGE}_defender.attack[$i].name"}
	{VARIABLE_OP {RANGE}_defender_attack_range format "${RANGE}_defender.attack[$i].range"}
	{IF {RANGE}_defender_attack equals "is_really_{RANGE}" (
	[then]
		{VARIABLE {RANGE}_defender.attack[$i].range "{RANGE}"}
		{VARIABLE_OP {RANGE}_defender.attack[$i].name format "${RANGE}_defender.variables.{RANGE}_attack_name"}
		{CLEAR_VARIABLE {RANGE}_defender.variables.hacked_attack_name}
	[/then]
	)}
	{IF {RANGE}_defender_attack_range equals "is_really_ranged" (
	[then]
		{VARIABLE {RANGE}_defender.attack[$i].range "ranged"}
	[/then]
	)}
	{NEXT i}
	[unstore_unit]
		variable={RANGE}_defender
	[/unstore_unit]
	{CLEAR_VARIABLE {RANGE}_attacker_attack}
	{CLEAR_VARIABLE {RANGE}_attacker}
	{CLEAR_VARIABLE {RANGE}_defender_attack}
	{CLEAR_VARIABLE {RANGE}_defender_attack_range}
	{CLEAR_VARIABLE {RANGE}_defender}
	[/event]
	[+attack]
#enddef

#gargoyle stoning code
#define STONE_GARGOYLES TURN SIDE
	[event]
		name=turn {TURN}
#removes the ability to recruit gargoyles during the day
		[disallow_recruit]
			side={SIDE}
			type=Gargoyle
		[/disallow_recruit]
#stones them
		[store_unit]
			[filter]
				type=Gargoyle
			[/filter]
			variable=gargoyles
		[/store_unit]
		{FOREACH gargoyles i}
		{VARIABLE gargoyles[$i].status.stone on}
		[unstore_unit]
			variable=gargoyles[$i]
		[/unstore_unit]
		{NEXT i}
		{CLEAR_VARIABLE gargoyles}
	[/event]
#enddef

#define UNSTONE_GARGOYLES TURN SIDE
	[event]
		name=turn {TURN}
		[allow_recruit]
			side={SIDE}
			type=Gargoyle
		[/allow_recruit]
		[unstone]
			type=Gargoyle
		[/unstone]
	[/event]
#enddef

#included in every scenario
#empty so far
#define FTF_COMMON

#enddef

#ensures that the correct portrait image will be shown
#define MESSAGE_ON_FIRST_UNIT MESSAGE
[if]
	[variable]
		name=unit.description
		equals="Malakar"
	[/variable]
	[then]
		[message]
			description=Malakar
			{MALAKAR_PORTRAIT}
			message={MESSAGE}
		[/message]
	[/then]
	[else]
		[if]
			[variable]
				name=unit.description
				equals="Kogw"
			[/variable]
			[then]
				[message]
					description=Kogw
					{KOGW_PORTRAIT}
					message={MESSAGE}
				[/message]
			[/then]
			[else]
				[message]
					speaker=unit
					message={MESSAGE}
				[/message]
			[/else]
		[/if]
	[/else]
[/if]
#enddef

#define MESSAGE_ON_SECOND_UNIT MESSAGE
[if]
	[variable]
		name=second_unit.description
		equals="Malakar"
	[/variable]
	[then]
		[message]
			description=Malakar
			{MALAKAR_PORTRAIT}
			message={MESSAGE}
		[/message]
	[/then]
	[else]
		[if]
			[variable]
				name=second_unit.description
				equals="Kogw"
			[/variable]
			[then]
				[message]
					description=Kogw
					{KOGW_PORTRAIT}
					message={MESSAGE}
				[/message]
			[/then]
			[else]
				[message]
					speaker=second_unit
					message={MESSAGE}
				[/message]
			[/else]
		[/if]
	[/else]
[/if]
#enddef

#hacked from the macros in Wesnoth
#necessary because Wesnoth's Fog Clearer has the movement type fly, which causes problems
#when areas in caves must be revealed
#define CLEAR_FOG_FTF SIDE X Y RADIUS
    [if]
        [have_unit]
            type=Fog Clearer FtF
        [/have_unit]

        [then]
            [set_variable]
                name=fog_clearer_i
                add=1
            [/set_variable]
        [/then]

        [else]
            [set_variable]
                name=fog_clearer_i
                value=1
            [/set_variable]
        [/else]
    [/if]

    [unit]
        side={SIDE}
        type=Fog Clearer FtF
        description=fog_clearer_$fog_clearer_i
        x,y={X},{Y}
        max_moves={RADIUS}
    [/unit]

    [store_unit]
        [filter]
            description=fog_clearer_$fog_clearer_i
        [/filter]

        kill=no
        variable=new_fog_clearer
    [/store_unit]

    [hide_unit]
        x,y=$new_fog_clearer.x,$new_fog_clearer.y
    [/hide_unit]

    [redraw]
        side={SIDE}
    [/redraw]
#enddef

#define UNCLEAR_FOG_FTF
    [kill]
        type=Fog Clearer FtF
        animate=no
        fire_event=no
    [/kill]

    [clear_variable]
        name=fog_clearer_i
    [/clear_variable]
#enddef

#define SPIDERWEB_SLOWING X Y SIDE
	[event]
		name=side turn
		first_time_only=no
		[store_unit]
			[filter]
				x={X}
				y={Y}
				side={SIDE}
			[/filter]
			variable=webbed_guys
		[/store_unit]
		{FOREACH webbed_guys i}
		{VARIABLE webbed_guys[$i].status.slowed on}
		[unstore_unit]
			variable=webbed_guys[$i]
		[/unstore_unit]
		{NEXT i}
		{CLEAR_VARIABLE webbed_guys}
		{CLEAR_VARIABLE i}
	[/event]
#enddef
