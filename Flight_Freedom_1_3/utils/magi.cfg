#EXTRA is used to trigger other code upon fireball impact
#x1 and y1 are target coordinates, x2 and y2 point to attacker

#define MAGI_EXTRA PLAYER ENEMIES EXTRA
#variables used to save labor in case I change these stats
	[event]
		name=prestart
		[set_variable]
			name=khigh_magus_range
			value=4
		[/set_variable]
		[set_variable]
			name=khigh_magus_damage
			value=30
		[/set_variable]
#set to -1 for infinite charges
		[set_variable]
			name=khigh_magus_charges
			value=3
		[/set_variable]
		[set_variable]
			name=kmagus_range
			value=2
		[/set_variable]
		[set_variable]
			name=kmagus_damage
			value=20
		[/set_variable]
#set to -1 for infinite charges
		[set_variable]
			name=kmagus_charges
			value=3
		[/set_variable]
	[/event]

	[event]
		name=prestart
		[store_unit]
			[filter]
				type=Drake High Magus,Drake High Magus Drained
				side={PLAYER}
			[/filter]
			variable=tempstore
		[/store_unit]
		{FOREACH tempstore i}
#shouldn't be necessary to initialize variable, but here just in case
		{VARIABLE tempstore[$i].variables.energy 0}
		{VARIABLE_OP tempstore[$i].variables.energy to_variable khigh_magus_charges}
		{VARIABLE tempstore[$i].variables.maxhp 0}
		{VARIABLE_OP tempstore[$i].variables.maxhp to_variable tempstore[$i].hitpoints}
		[if]
			[variable]
				name=tempstore[$i].type
				equals="Drake High Magus Drained"
			[/variable]
			[then]
				{VARIABLE tempstore[$i].type (Drake High Magus)}
			[/then]
		[/if]
		{VARIABLE tempstore[$i].overlays ("misc/mage-charged.png")}
		[unstore_unit]
			variable=tempstore[$i]
		[/unstore_unit]
		[if]
			[variable]
				name=tempstore[$i].type
				equals="Drake High Magus Drained"
			[/variable]
			[then]
				{RESTORE_MAXHP_HMAGUS tempstore[$i]}
			[/then]
		[/if]
		{NEXT i}
		{CLEAR_VARIABLE tempstore}
		{CLEAR_VARIABLE i}
	[/event]

	[event]
		name=prestart
		[store_unit]
			[filter]
				type=Drake Magus,Drake Magus Drained
				side={PLAYER}
			[/filter]
			variable=tempstore
		[/store_unit]
		{FOREACH tempstore i}
#shouldn't be necessary to initialize variable, but here just in case
		{VARIABLE tempstore[$i].variables.energy 0}
		{VARIABLE_OP tempstore[$i].variables.energy to_variable kmagus_charges}
		{VARIABLE tempstore[$i].variables.maxhp 0}
		{VARIABLE_OP tempstore[$i].variables.maxhp to_variable tempstore[$i].hitpoints}
		[if]
			[variable]
				name=tempstore[$i].type
				equals="Drake Magus Drained"
			[/variable]
			[then]
				{VARIABLE tempstore[$i].type (Drake Magus)}
			[/then]
		[/if]
		{VARIABLE tempstore[$i].overlays ("misc/mage-charged.png")}
		[unstore_unit]
			variable=tempstore[$i]
		[/unstore_unit]
		[if]
			[variable]
				name=tempstore[$i].type
				equals="Drake Magus Drained"
			[/variable]
			[then]
				{RESTORE_MAXHP_MAGUS tempstore[$i]}
			[/then]
		[/if]
		{NEXT i}
		{CLEAR_VARIABLE tempstore}
		{CLEAR_VARIABLE i}
	[/event]

	[event]
#not prestart or start to keep players from invoking it before the initial dialogue is finished
#and yes, I know that turn 1 events are forbidden by the wiki
		name=turn 1
		[set_menu_item]
			id=lesser_fireball
			description= _ "Lesser Fireball"
			image=buttons/fireball.png
#only allows its use during the player's turn
			[show_if]
				[variable]
					name=side_number
					numerical_equals={PLAYER}
				[/variable]
				[and]
					[have_unit]
						x,y=$x1,$y1
						side={ENEMIES}
					[/have_unit]
				[/and]
			[/show_if]
			[filter_location]
				[filter]
					type=Drake Magus
					side={PLAYER}
					[wml_filter]
						attacks_left=1
					[/wml_filter]
				[/filter]
				radius=$kmagus_range
			[/filter_location]
			[command]
				{VARIABLE award 0}
#in case a die event needs to know about the fireball attack
				{VARIABLE lr_fireball 1}
				[store_unit]
					[filter]
						type=Drake Magus
						side={PLAYER}
						[wml_filter]
							attacks_left=1
						[/wml_filter]
						[filter_location]
							x,y=$x1,$y1
							radius=$kmagus_range
						[/filter_location]
					[/filter]
					variable=tempstore
				[/store_unit]
				[store_unit]
					[filter]
						x,y=$x1,$y1
					[/filter]
					variable=victimstore
				[/store_unit]
#to avoid directly modifying a constant
				{VARIABLE_OP magus_tdamage to_variable kmagus_damage}
#resistance and experience code written and inspired by Ken Oh
				{VARIABLE_OP magus_tdamage multiply $victimstore.resistance.fire}
				{VARIABLE_OP magus_tdamage divide 100}
				[animate_unit]
					flag=lrfireball_attack
					[filter]
						x=$tempstore.x
						y=$tempstore.y
					[/filter]
				[/animate_unit]
				[delay]
					time=300
				[/delay]
				[sound]
					name=flame-big-miss.ogg
				[/sound]
#would look much better if the fireball could move along a straight line from mage to target
				[move_unit_fake]
					x=$tempstore.x,$x1
					y=$tempstore.y,$y1
					type=Fireball
				[/move_unit_fake]
#				{COLOR_ADJUST 175 0 0}
#				[delay]
#					time=25
#				[/delay]
#				{COLOR_ADJUST 0 0 0}
				{FIREBALL_IMPACT $x1 $y1}
#temporary variables preserve true x2 and y2 for potential later use by this code
				{VARIABLE_OP tx1 to_variable x1}
				{VARIABLE_OP x1 to_variable tempstore.x}
				{VARIABLE_OP ty1 to_variable y1}
				{VARIABLE_OP y1 to_variable tempstore.y}
				{VARIABLE_OP tx2 to_variable x2}
				{VARIABLE_OP x2 to_variable tempstore.x}
				{VARIABLE_OP ty2 to_variable y2}
				{VARIABLE_OP y2 to_variable tempstore.y}
				{EXTRA}
				{VARIABLE_OP x1 to_variable tx1}
				{VARIABLE_OP y1 to_variable ty1}
				{VARIABLE_OP x2 to_variable tx2}
				{VARIABLE_OP y2 to_variable ty2}
				[if]
					[variable]
						name=victimstore.hitpoints
						less_than_equal_to=$magus_tdamage
					[/variable]
					[then]
						[kill]
							x,y=$x1,$y1
							animate=yes
							fire_event=yes
						[/kill]
#because any die events triggered would change these variables
						{VARIABLE_OP x1 to_variable tx1}
						{VARIABLE_OP y1 to_variable ty1}
						{VARIABLE_OP x2 to_variable tx2}
						{VARIABLE_OP y2 to_variable ty2}
						[if]
							[variable]
								name=victimstore.level
								numerical_equals=0
							[/variable]
							[then]
								{VARIABLE_OP tempstore.experience add 4}
							[/then]
							[else]
								{VARIABLE_OP award to_variable victimstore.level}
								{VARIABLE_OP award multiply 8}
								{VARIABLE_OP tempstore.experience add $award}
							[/else]
						[/if]
					[/then]
					[else]
						{VARIABLE_OP magus_tdamage multiply -1}
						{VARIABLE_OP victimstore.hitpoints add $high_magus_tdamage}
						{VARIABLE_OP tempstore.experience add $victimstore.level}
						[unstore_unit]
							variable=victimstore
						[/unstore_unit]
					[/else]
				[/if]
				{CLEAR_VARIABLE tx1}
				{CLEAR_VARIABLE ty1}
				{CLEAR_VARIABLE tx2}
				{CLEAR_VARIABLE ty2}
				{CLEAR_VARIABLE victimstore}
				{CLEAR_VARIABLE magus_tdamage}
				{VARIABLE_OP tempstore.variables.energy add -1}
				[redraw]
				[/redraw]
				[if]
					[variable]
						name=tempstore.variables.energy
						numerical_equals=0
					[/variable]
					[then]
						[message]
							x=$tempstore.x
							y=$tempstore.y
							message= _ "My energies are drained, I need rest."
						[/message]
						{VARIABLE tempstore.overlays ("misc/mage-drained.png")}
						{VARIABLE tempstore.type (Drake Magus Drained)}
					[/then]
				[/if]
#shouldn't be necessary to do this, but it seems to be
				[unstore_unit]
					variable=tempstore
				[/unstore_unit]
				[store_unit]
					[filter]
						x=$tempstore.x
						y=$tempstore.y
					[/filter]
					variable=tempstoreb
				[/store_unit]
				{VARIABLE tempstoreb.moves 0}
				{VARIABLE tempstoreb.resting no}
				{VARIABLE tempstoreb.attacks_left 0}
				[unstore_unit]
					variable=tempstoreb
				[/unstore_unit]
				[if]
					[variable]
						name=tempstoreb.variables.energy
						numerical_equals=0
					[/variable]
					[then]
						{RESTORE_MAXHP_MAGUS tempstoreb}
					[/then]
				[/if]
				[redraw]
				[/redraw]
				{CLEAR_VARIABLE tempstore}
				{CLEAR_VARIABLE tempstoreb}
				{CLEAR_VARIABLE award}
				{CLEAR_VARIABLE lr_fireball}
			[/command]
		[/set_menu_item]
	[/event]

	[event]
#not prestart to keep players from invoking it before the initial dialogue is finished
#and yes, I know that turn 1 events are forbidden by the wiki
		name=turn 1
		[set_menu_item]
			id=fireball
			description= _ "Fireball"
			image=buttons/fireball.png
#only allows its use during the player's turn
			[show_if]
				[variable]
					name=side_number
					numerical_equals={PLAYER}
				[/variable]
				[and]
					[have_unit]
						x,y=$x1,$y1
						side={ENEMIES}
					[/have_unit]
				[/and]
			[/show_if]
			[filter_location]
				[filter]
					type=Drake High Magus
					side={PLAYER}
					[wml_filter]
						attacks_left=1
					[/wml_filter]
				[/filter]
				radius=$khigh_magus_range
			[/filter_location]
			[command]
				{VARIABLE award 0}
#in case a die event needs to know about the fireball attack
				{VARIABLE lr_fireball 1}
				[store_unit]
					[filter]
						type=Drake High Magus
						side={PLAYER}
						[wml_filter]
							attacks_left=1
						[/wml_filter]
						[filter_location]
							x,y=$x1,$y1
							radius=$khigh_magus_range
						[/filter_location]
					[/filter]
					variable=tempstore
				[/store_unit]
				[store_unit]
					[filter]
						x,y=$x1,$y1
					[/filter]
					variable=victimstore
				[/store_unit]
#to avoid directly modifying a constant
				{VARIABLE_OP high_magus_tdamage to_variable khigh_magus_damage}
#resistance and experience code written and inspired by Ken Oh
				{VARIABLE_OP high_magus_tdamage multiply $victimstore.resistance.fire}
				{VARIABLE_OP high_magus_tdamage divide 100}
				[animate_unit]
					flag=lrfireball_attack
					[filter]
						x=$tempstore.x
						y=$tempstore.y
					[/filter]
				[/animate_unit]
				[delay]
					time=300
				[/delay]
				[sound]
					name=flame-big-miss.ogg
				[/sound]
#would look much better if the fireball could move along a straight line from mage to target
				[move_unit_fake]
					x=$tempstore.x,$x1
					y=$tempstore.y,$y1
					type=Fireball
				[/move_unit_fake]
#				{COLOR_ADJUST 255 0 0}
#				[delay]
#					time=25
#				[/delay]
#				{COLOR_ADJUST 0 0 0}
				{FIREBALL_IMPACT $x1 $y1}
#temporary variables preserve true x1, y1, x2 and y2 for potential later use by this code
				{VARIABLE_OP tx1 to_variable x1}
				{VARIABLE_OP x1 to_variable tempstore.x}
				{VARIABLE_OP ty1 to_variable y1}
				{VARIABLE_OP y1 to_variable tempstore.y}
				{VARIABLE_OP tx2 to_variable x2}
				{VARIABLE_OP x2 to_variable tempstore.x}
				{VARIABLE_OP ty2 to_variable y2}
				{VARIABLE_OP y2 to_variable tempstore.y}
				{EXTRA}
				{VARIABLE_OP x1 to_variable tx1}
				{VARIABLE_OP y1 to_variable ty1}
				{VARIABLE_OP x2 to_variable tx2}
				{VARIABLE_OP y2 to_variable ty2}
				[if]
					[variable]
						name=victimstore.hitpoints
						less_than_equal_to=$high_magus_tdamage
					[/variable]
					[then]
						[kill]
							x,y=$x1,$y1
							animate=yes
							fire_event=yes
						[/kill]
#because any die events triggered would change these variables
						{VARIABLE_OP x1 to_variable tx1}
						{VARIABLE_OP y1 to_variable ty1}
						{VARIABLE_OP x2 to_variable tx2}
						{VARIABLE_OP y2 to_variable ty2}
						[if]
							[variable]
								name=victimstore.level
								numerical_equals=0
							[/variable]
							[then]
								{VARIABLE_OP tempstore.experience add 4}
							[/then]
							[else]
								{VARIABLE_OP award to_variable victimstore.level}
								{VARIABLE_OP award multiply 8}
								{VARIABLE_OP tempstore.experience add $award}
							[/else]
						[/if]
					[/then]
					[else]
						{VARIABLE_OP high_magus_tdamage multiply -1}
						{VARIABLE_OP victimstore.hitpoints add $high_magus_tdamage}
						{VARIABLE_OP tempstore.experience add $victimstore.level}
						[unstore_unit]
							variable=victimstore
						[/unstore_unit]
					[/else]
				[/if]
				{CLEAR_VARIABLE tx1}
				{CLEAR_VARIABLE ty1}
				{CLEAR_VARIABLE tx2}
				{CLEAR_VARIABLE ty2}
				{CLEAR_VARIABLE victimstore}
				{CLEAR_VARIABLE high_magus_tdamage}
				{VARIABLE_OP tempstore.variables.energy add -1}
				[redraw]
				[/redraw]
				[if]
					[variable]
						name=tempstore.variables.energy
						numerical_equals=0
					[/variable]
					[then]
						[message]
							x=$tempstore.x
							y=$tempstore.y
							message= _ "My energies are drained, I need rest."
						[/message]
						{VARIABLE tempstore.overlays ("misc/mage-drained.png")}
						{VARIABLE tempstore.type (Drake High Magus Drained)}
					[/then]
				[/if]
#shouldn't be necessary to do this, but it seems to be
				[unstore_unit]
					variable=tempstore
				[/unstore_unit]
				[store_unit]
					[filter]
						x=$tempstore.x
						y=$tempstore.y
					[/filter]
					variable=tempstoreb
				[/store_unit]
				{VARIABLE tempstoreb.moves 0}
				{VARIABLE tempstoreb.resting no}
				{VARIABLE tempstoreb.attacks_left 0}
				[unstore_unit]
					variable=tempstoreb
				[/unstore_unit]
				[if]
					[variable]
						name=tempstoreb.variables.energy
						numerical_equals=0
					[/variable]
					[then]
						{RESTORE_MAXHP_HMAGUS tempstoreb}
					[/then]
				[/if]
				[redraw]
				[/redraw]
				{CLEAR_VARIABLE tempstore}
				{CLEAR_VARIABLE tempstoreb}
				{CLEAR_VARIABLE award}
				{CLEAR_VARIABLE lr_fireball}
			[/command]
		[/set_menu_item]
	[/event]

	[event]
		name=attack_end
		first_time_only=no
		[filter]
			type=Drake High Magus,Drake Magus
			side={PLAYER}
		[/filter]
		[if]
			[have_unit]
				x,y=$x1,$y1
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						x,y=$x1,$y1
					[/filter]
					variable=tempstore
				[/store_unit]
				{VARIABLE tempstore.moves 0}
				{VARIABLE tempstore.resting no}
				{VARIABLE tempstore.attacks_left 0}
				[unstore_unit]
					variable=tempstore
				[/unstore_unit]
				[redraw]
				[/redraw]
				{CLEAR_VARIABLE tempstore}
			[/then]
		[/if]
	[/event]

	[event]
		name=recruit
		first_time_only=no
		[filter]
			type=Drake High Magus
			side={PLAYER}
		[/filter]
		[store_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			variable=tempstore_magus
		[/store_unit]
#shouldn't be necessary to initialize variable, but here just in case
		{VARIABLE tempstore_magus.variables.maxhp 0}
		{VARIABLE_OP tempstore_magus.variables.maxhp to_variable tempstore_magus.hitpoints}
		{VARIABLE tempstore_magus.variables.energy 0}
		{VARIABLE_OP tempstore_magus.variables.energy to_variable khigh_magus_charges}
		[unstore_unit]
			variable=tempstore_magus
		[/unstore_unit]
		{RESTORE_MAXHP_HMAGUS tempstore_magus}
		[unit_overlay]
			x,y=$x1,$y1
			image=misc/mage-charged.png
		[/unit_overlay]
		{CLEAR_VARIABLE tempstore_magus}
	[/event]

	[event]
		name=recruit
		first_time_only=no
		[filter]
			type=Drake Magus
			side={PLAYER}
		[/filter]
		[store_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			variable=tempstore_magus
		[/store_unit]
#shouldn't be necessary to initialize variable, but here just in case
		{VARIABLE tempstore_magus.variables.maxhp 0}
		{VARIABLE_OP tempstore_magus.variables.maxhp to_variable tempstore_magus.hitpoints}
		{VARIABLE tempstore_magus.variables.energy 0}
		{VARIABLE_OP tempstore_magus.variables.energy to_variable kmagus_charges}
		[unstore_unit]
			variable=tempstore_magus
		[/unstore_unit]
		{RESTORE_MAXHP_MAGUS tempstore_magus}
		[unit_overlay]
			x,y=$x1,$y1
			image=misc/mage-charged.png
		[/unit_overlay]
		{CLEAR_VARIABLE tempstore_magus}
	[/event]

	[event]
		name=post_advance
		first_time_only=no
		[filter]
			type=Drake Magus,Drake Magus Drained
			side={PLAYER}
		[/filter]
		[store_unit]
			[filter]
				x,y=$x1,$y1
			[/filter]
			variable=tempstore_magus
		[/store_unit]
#shouldn't be necessary to initialize variable, but here just in case
		{VARIABLE tempstore_magus.variables.maxhp 0}
		{VARIABLE_OP tempstore_magus.variables.maxhp to_variable tempstore_magus.hitpoints}
		{VARIABLE tempstore_magus.variables.energy 0}
		{VARIABLE_OP tempstore_magus.variables.energy to_variable khigh_magus_charges}
		[unstore_unit]
			variable=tempstore_magus
		[/unstore_unit]
		{RESTORE_MAXHP_HMAGUS tempstore_magus}
		[remove_unit_overlay]
			x,y=$x1,$y1
		[/remove_unit_overlay]
		[unit_overlay]
			x,y=$x1,$y1
			image=misc/mage-charged.png
		[/unit_overlay]
		{CLEAR_VARIABLE tempstore_magus}
	[/event]
#enddef

#define MAGI PLAYER ENEMIES
{MAGI_EXTRA {PLAYER} {ENEMIES} ()}
#enddef

#define RESTORE_MAXHP_HMAGUS VNAME
	{VARIABLE_OP tmaxhp to_variable {VNAME}.variables.maxhp}
#Drake High Magus has 36 HP
	{VARIABLE_OP tmaxhp add -36}
	[object]
		silent=yes
		[filter]
			x={VNAME}.x
			y={VNAME}.y
		[/filter]
		[effect]
			apply_to=hitpoints
			increase_total=tmaxhp
			heal_full=no
		[/effect]
	[/object]
	{CLEAR_VARIABLE tmaxhp}
#enddef

#define RESTORE_MAXHP_MAGUS VNAME
	{VARIABLE_OP tmaxhp to_variable {VNAME}.variables.maxhp}
#Drake Magus has 28 HP
	{VARIABLE_OP tmaxhp add -28}
	[object]
		silent=yes
		[filter]
			x={VNAME}.x
			y={VNAME}.y
		[/filter]
		[effect]
			apply_to=hitpoints
			increase_total=tmaxhp
			heal_full=no
		[/effect]
	[/object]
	{CLEAR_VARIABLE tmaxhp}
#enddef

#to be used like this:
# {HMAGUS 20 14 1 (
# random_traits=yes
# generate_description=yes
# )}

#define HMAGUS X Y SIDE EXTRA
	[store_unit]
		[filter]
			x={X}
			y={Y}
		[/filter]
		kill=yes
		variable=tempstore
	[/store_unit]
	[unit]
		x={X}
		y={Y}
		side={SIDE}
		type=Drake High Magus
		[variables]
			energy=$khigh_magus_charges
			hitpoints=0
		[/variables]
		overlays=misc/mage-charged.png
		{EXTRA}
	[/unit]
	[store_unit]
		[filter]
			x={X}
			y={Y}
		[/filter]
		variable=tempstore_magus
		kill=yes
	[/store_unit]
#shouldn't be necessary to initialize variable, but here just in case
	{VARIABLE tempstore_magus.variables.maxhp 0}
	{VARIABLE_OP tempstore_magus.variables.maxhp to_variable tempstore_magus.hitpoints}
	[unstore_unit]
		variable=tempstore
	[/unstore_unit]
	[unstore_unit]
		variable=tempstore_magus
		find_vacant=yes
	[/unstore_unit]
	{CLEAR_VARIABLE tempstore_magus}
	{CLEAR_VARIABLE tempstore}
	[redraw]
	[/redraw]
#enddef

#define MAGUS X Y SIDE EXTRA
	[store_unit]
		[filter]
			x={X}
			y={Y}
		[/filter]
		kill=yes
		variable=tempstore
	[/store_unit]
	[unit]
		x={X}
		y={Y}
		side={SIDE}
		type=Drake Magus
		[variables]
			energy=$kmagus_charges
			hitpoints=0
		[/variables]
		overlays=misc/mage-charged.png
		{EXTRA}
	[/unit]
	[store_unit]
		[filter]
			x={X}
			y={Y}
		[/filter]
		variable=tempstore_magus
		kill=yes
	[/store_unit]
#shouldn't be necessary to initialize variable, but here just in case
	{VARIABLE tempstore_magus.variables.maxhp 0}
	{VARIABLE_OP tempstore_magus.variables.maxhp to_variable tempstore_magus.hitpoints}
	[unstore_unit]
		variable=tempstore
	[/unstore_unit]
	[unstore_unit]
		variable=tempstore_magus
		find_vacant=yes
	[/unstore_unit]
	{CLEAR_VARIABLE tempstore_magus}
	{CLEAR_VARIABLE tempstore}
	[redraw]
	[/redraw]
#enddef

#undef RESTORE_MAXHP_HMAGUS
#undef RESTORE_MAXHP_MAGUS
