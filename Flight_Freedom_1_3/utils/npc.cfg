#define NPC_SIDE SIDE TEAMNAME USERTEAM
    [side]
        type=Cow
        side={SIDE}
        controller=ai
        canrecruit=0
        recruit=
        colour=100
        [ai]
            ai_algorithm=idle_ai
        [/ai]
        no_leader=yes
        team_name={TEAMNAME}
		user_team_name={USERTEAM}
    [/side]
#enddef

#define NPC_HOSTILE_SIDE SIDE TEAMNAME
    [side]
        type=Cow
        side={SIDE}
        controller=ai
        canrecruit=0
        recruit=
        [ai]
            #makes them focus on the player
            [target]
                side=1
                value=5
            [/target]
            aggression=1.0
            leader_value=0
            village_value=0
            protect_leader=0
            grouping=no
            caution=0.1
            simple_targetting=yes
        [/ai]
        no_leader=yes
        team_name={TEAMNAME}
    [/side]
#enddef

#define NPC TYPE X Y SIDE
    {RANDOM 1..2}
    [if]
        [variable]
            name=random
            less_than=2
        [/variable]
        [then]
            {RANDOM_TRAIT_UNIT (
            generate_description=no
            type={TYPE}
            x,y={X},{Y}
            side={SIDE}
            ai_special=guardian
            )}
        [/then]
        [else]
            {RANDOM_TRAIT_UNIT (
            generate_description=no
            type={TYPE}
            x,y={X},{Y}
            side={SIDE}
            ai_special=guardian
            facing=sw
            )}
        [/else]
    [/if]
    {CLEAR_VARIABLE random}
#enddef

#bird code from IftU, edited to remove macro dependencies
#define NPC_BIRD_UNIT_TYPES
    Crow,Falcon #enddef

#define NPC_BIRD_BEHAVIOR SIDE TOP BOTTOM LEFT RIGHT
	[event]
		name=turn refresh
		first_time_only=no
		[if]
			[variable]
				name=side_number
				numerical_equals={SIDE}
			[/variable]
			[then]
				[store_unit]
					[filter]
						type={NPC_BIRD_UNIT_TYPES}
						side={SIDE}
					[/filter]
					variable=NPC_birds
					kill=no
				[/store_unit]
				# Sanity checks go first; make sure that in the real bird movement [if] block we are not
				# going to place an unit out of the parameter-defined boundaries!
				# This reminds me how nice it would be to have:
				#
				# [set_variable]
				#   name=foo_bar
				#   map_boundaries=all
				# [/set_variable]
				# or
				# [set_variable]
				#   name=foo_bar.x
				#   map_boundaries=x
				# [/set_variable]
				{FOREACH NPC_birds i}
					[if]
						[variable]
							name=NPC_birds[$i].x
							greater_than_equal_to={RIGHT}
						[/variable]
						[or]
							[variable]
								name=NPC_birds[$i].x
								less_than_equal_to={LEFT}
							[/variable]
						[/or]
						[or]
							[variable]
								name=NPC_birds[$i].y
								less_than_equal_to={TOP}
							[/variable]
						[/or]
						[or]
							[variable]
								name=NPC_birds[$i].y
								greater_than_equal_to={BOTTOM}
							[/variable]
						[/or]
						[then]
							[kill]
								description=$NPC_birds[$i].description
								side=$NPC_birds[$i].side
								animate=no
								fire_event=no
							[/kill]
						[/then]
					[/if]
				{NEXT i}
				# Refresh list of NPC birds with the above changes
				{CLEAR_VARIABLE NPC_birds}
				[store_unit]
					[filter]
						type={NPC_BIRD_UNIT_TYPES}
						side={SIDE}
					[/filter]
					variable=NPC_birds
					kill=no
				[/store_unit]

				{FOREACH NPC_birds i}
					[if]
						[variable]
							name=NPC_birds[$i].moves
							greater_than=0
						[/variable]
						[then]
							{RANDOM "n,s,ne,nw,se,sw"}
							{VARIABLE j 0}
							{VARIABLE_OP j_bound format "$NPC_birds[$i].moves"}
							{VARIABLE_OP NPC_temp_movepath_x format "$NPC_birds[$i].x"}
							{VARIABLE_OP NPC_temp_movepath_y format "$NPC_birds[$i].y"}
							[while]
								[variable]
									name=j
									less_than=$j_bound
								[/variable]
								[and]
									[have_unit]
										description=$NPC_birds[$i].description
										side=$NPC_birds[$i].side
									[/have_unit]
								[/and]
								[do]
									# Get an adjacent location in that random direction
									[store_locations]
										[filter_adjacent_location]
											adjacent=-$random
											x=$NPC_birds[$i].x
											y=$NPC_birds[$i].y
										[/filter_adjacent_location]
										variable=temp_NPC_target
									[/store_locations]
									# OK, got it. Prepare for next recursion cycle and extend the MUF path string
									# Extra code ensuring that the variables are copied, formatted and set in the correct order
									{VARIABLE_OP temp_swap_var format "$NPC_temp_movepath_x|,$temp_NPC_target.x|"}
									{VARIABLE_OP NPC_temp_movepath_x format "$temp_swap_var"}
									{VARIABLE_OP temp_swap_var format "$NPC_temp_movepath_y|,$temp_NPC_target.y|"}
									{VARIABLE_OP NPC_temp_movepath_y format "$temp_swap_var"}
									{VARIABLE NPC_birds[$i].x $temp_NPC_target.x}
									{VARIABLE NPC_birds[$i].y $temp_NPC_target.y}
		
									{CLEAR_VARIABLE temp_swap_var}
									{CLEAR_VARIABLE temp_NPC_target}
									
									{VARIABLE_OP NPC_birds[$i].moves add (-1)}
									{VARIABLE_OP j add 1}
								[/do]
							[/while]
							{CLEAR_VARIABLE j}
							{CLEAR_VARIABLE j_bound}
							# Now move the bird
							[kill]
								description=$NPC_birds[$i].description
								side=$NPC_birds[$i].side
								animate=no
								fire_event=no
							[/kill]
							[move_unit_fake]
								gender=$NPC_birds[$i].gender
								variation=$NPC_birds[$i].variation
								type=$NPC_birds[$i].type
								side=$NPC_birds[$i].side
								x=$NPC_temp_movepath_x
								y=$NPC_temp_movepath_y
							[/move_unit_fake]
							{VARIABLE NPC_birds[$i].facing $random}
							[unstore_unit]
								# In case the coordinates were screwed up in the process by a design flaw in this code,
								# make sure we don't kill any existing units by unstoring in an occupied hex
								find_vacant=yes
								variable=NPC_birds[$i]
							[/unstore_unit]
							[redraw]
							[/redraw]
							{CLEAR_VARIABLE NPC_temp_movepath_x}
							{CLEAR_VARIABLE NPC_temp_movepath_y}
						[/then]
					[/if]
				{NEXT i}
				{CLEAR_VARIABLE NPC_birds}
			[/then]
		[/if]
	[/event]
#enddef
